<!-- 
  Example launch file for octomap_server mapping: 
  Listens to incoming PointCloud2 data and incrementally builds an octomap. 
  The data is sent out in different representations. 

  Copy this file into your workspace and adjust as needed, see
  www.ros.org/wiki/octomap_server for details  
-->
<launch>
    <node pkg="villa_octomap_server" type="octomap_color_server_node" name="octomap_server">
        <param name="resolution" value="0.02" />
        <param name="latch" value="false" />

        <!-- fixed map frame (set to 'map' if SLAM or localization running!) -->
        <param name="frame_id" type="string" value="map" />

	    <param name="height_map" value="false" />
	    <param name="colored_map" value="true" />
        
        <!-- maximum range to integrate (speedup!) -->
        <param name="sensor_model/max_range" value="2.0" />
        
        <!-- data source to integrate (PointCloud2) -->
        <remap from="cloud_in" to="/hsrb/head_rgbd_sensor/depth_registered/rectified_points" />
    
    </node>
</launch>
